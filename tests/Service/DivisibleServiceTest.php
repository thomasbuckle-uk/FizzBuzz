<?php

namespace App\Tests\Service;

use App\Service\DivisibleService;
use JetBrains\PhpStorm\Pure;
use PHPUnit\Framework\TestCase;

class DivisibleServiceTest extends TestCase
{

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testTrue(): void
    {
        $divisibleService = new DivisibleService();
        $result = $divisibleService->isDivisible(30, 3);

        self::assertTrue($result);
    }


    public function testFalse(): void
    {
        $divisibleService = new DivisibleService();
        $result = $divisibleService->isDivisible(30, 7);

        self::assertFalse($result);
    }

    public function testDecimal(): void
    {
        $divisibleService = new DivisibleService();
        $result = $divisibleService->isDivisible(30, 7.5);
        self::assertFalse($result);
    }

    public function testIsPrime(): void
    {
        $divisibleService = new DivisibleService();
        self::assertEquals(true, $divisibleService->isPrime(3), 'Testing 3 is prime');

        self::assertEquals(false, $divisibleService->isPrime(4), 'Testing 4 is not prime');
    }

    public function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}
